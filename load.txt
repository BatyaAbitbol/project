let  base64data="";

 const customBase64Uploader = async (event) => {
        
        // convert file to base64 encoded
        const file = event.files[0];
        const reader = new FileReader();
        let blob = await fetch(file.objectURL).then((r) => r.blob()); //blob:url

        reader.readAsDataURL(blob);

        reader.onloadend = function () {
            base64data = reader.result;            
        }};

<FileUpload name="demo[]" url={'/api/upload'} multiple accept="image/*" customUpload uploadHandler={customBase64Uploader} maxFileSize={1000000} emptyTemplate={<p className="m-0">Drag and drop files to here to upload.</p>} />


server:
const base64toFile = require('node-base64-to-file');
const path = require("path")
const {v4:uuid} = require("uuid")

let imagePath=""
        const folder = path.join(__dirname, "..", "public", "images")
        const filename = `${uuid()}`
        const fileUrl  =`${folder}\\${filename}`
        
        // const base64String ="";
        const base64String=req.body.Img
        const allAds=await AdvertismentDB.getAllAds();
        //const maxId =allAds[allAds.length-1].Id+1
        
       try {

       // imagePath = await base64toFile(base64String, { filePath: "./img", fileName: "/ad_"+1+"_"+req.body.AdOwner, types: ['jpeg'], fileMaxSize: 3145728 });
        imagePath = await base64toFile(base64String, { filePath:folder, fileName:filename, types: ['jpeg'], fileMaxSize: 3145728 });
        //console.log("path"+fileUrl);
        } catch (error) {
         return res.status(400).json({ message: 'error occured while loading image'})
        }


reading:
  <Image
        src={`data:image/jpeg;base64,${ad.Img}`}
        alt="Image"
        width="250"
        preview
        p-button-text
        style={{ marginLeft: "10px" }}
  /> 